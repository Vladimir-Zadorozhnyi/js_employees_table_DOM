{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headers","querySelectorAll","list","rows","orders","forEach","element","index","addEventListener","current","order","replace","num","textContent","sort","a","b","nameA","nameB","isNaN","localeCompare","row","appendChild","e","target","closest","classList","toggle","remove","insertAdjacentHTML","form","inputs","select","showNotification","type","message","notificationHTML","notification","setTimeout","preventDefault","values","input","getAttribute","value","nameEmployee","positionEmployee","officeEmployee","ageEmployee","parseInt","salaryEmployee","length","newRow","insertRow","header","cell","insertCell","columnName","toLowerCase","salaryValue"],"mappings":"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","file":"main.9d705b38.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('thead th');\nconst list = table.querySelector('tbody');\nlet rows = table.querySelectorAll('tbody tr');\nconst orders = {};\n\nheaders.forEach((element, index) => {\n  orders[index] = 'asc';\n\n  element.addEventListener('click', () => {\n    const current = `td:nth-child(${index + 1})`;\n    const order = orders[index];\n\n    if (order === 'asc') {\n      orders[index] = 'desc';\n    } else {\n      orders[index] = 'asc';\n    }\n\n    function replace(num) {\n      return num.querySelector(current)\n        .textContent.replace(/[$,]/g, '');\n    }\n\n    [...rows].sort((a, b) => {\n      const nameA = replace(a);\n      const nameB = replace(b);\n\n      if (!isNaN(nameA)) {\n        return order === 'asc' ? nameA - nameB : nameB - nameA;\n      } else {\n        return order === 'asc' ? nameA.localeCompare(nameB)\n          : nameB.localeCompare(nameA);\n      }\n    }).forEach(row => list.appendChild(row));\n  });\n});\n\nlist.addEventListener('click', e => {\n  const current = e.target.closest('tr');\n\n  if (!current) {\n    return;\n  };\n\n  rows.forEach(row => {\n    if (row === current) {\n      row.classList.toggle('active');\n    } else {\n      row.classList.remove('active');\n    }\n  });\n});\n\ntable.insertAdjacentHTML('afterend', `\n  <form class=\"new-employee-form\">\n    <label>Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n    ></label>\n    <label>Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n    ></label>\n    <label>Office:\n      <select \n        name=\"position\"\n        data-qa=\"office\"\n      >\n        <option selected disabled hidden></option>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n    ></label>\n    <label>Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        data-qa=\"salary\"\n    ></label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\nconst inputs = form.querySelectorAll('input[data-qa]');\nconst select = form.querySelector('select[data-qa]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const values = {};\n\n  inputs.forEach(input => {\n    values[input.getAttribute('data-qa')] = input.value;\n  });\n  values[select.getAttribute('data-qa')] = select.value;\n\n  const nameEmployee = values['name'];\n  const positionEmployee = values['position'];\n  const officeEmployee = values['office'];\n  const ageEmployee = parseInt(values['age']);\n  const salaryEmployee = parseInt(values['salary']);\n\n  if (nameEmployee.length < 4) {\n    return showNotification('error',\n      'The name must contain at least 4 letters.');\n  }\n\n  if (positionEmployee.length === 0) {\n    return showNotification('error', 'The \"Position\" is empty.');\n  }\n\n  if (!officeEmployee) {\n    return showNotification('error', 'The Office field is not selected.');\n  }\n\n  if (isNaN(ageEmployee) || ageEmployee < 18 || ageEmployee > 90) {\n    return showNotification('error',\n      'The age must be a valid number between 18 and 90.');\n  }\n\n  if (isNaN(salaryEmployee) || salaryEmployee < 0) {\n    return showNotification('error', 'The \"Salary\" is empty.');\n  } else {\n    const newRow = list.insertRow();\n\n    headers.forEach(header => {\n      const cell = newRow.insertCell();\n      const columnName = header.textContent.toLowerCase();\n\n      if (columnName === 'salary') {\n        const salaryValue = '$' + values[columnName]\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n        cell.textContent = salaryValue;\n      } else {\n        cell.textContent = values[columnName];\n      }\n    });\n\n    rows = table.querySelectorAll('tbody tr');\n\n    showNotification('success',\n      'The new employee is successfully added to the table.');\n\n    inputs.forEach(input => {\n      input.value = '';\n    });\n    select.value = '';\n  }\n});\n\nfunction showNotification(type, message) {\n  const notificationHTML = `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h3>${type}</h3>\n      <p>${message}</p>\n    </div>\n  `;\n\n  form.insertAdjacentHTML('afterend', notificationHTML);\n\n  const notification = document.querySelector('[data-qa=\"notification\"]');\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n"]}